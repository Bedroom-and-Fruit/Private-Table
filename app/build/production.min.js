"use strict";$(document).foundation(),function(){Stripe.setPublishableKey("pk_test_rT3gR317GZZ9QOG0D5uMaQWy")}(),angular.module("privateTableApp",["ngAria","ngCookies","ngMessages","ngResource","ngSanitize","ui.router","ngTouch","searchBarFactory","searchResultsFactory","roomFactory","checkoutFactory","angularPayments","mm.foundation","ngModal","authFactory","favoriteFactory","authInterceptorFactory","bookingsFactory"]).config(function($stateProvider,$urlRouterProvider,$locationProvider,$httpProvider){$urlRouterProvider.otherwise("/"),$httpProvider.interceptors.push("authInterceptor"),$stateProvider.state("landing",{url:"/",templateUrl:"views/landing.html"}).state("searchBar",{url:"/searchbar?startTimeStamp&endTimeStamp&lng&lat&city&state&country&guests&budget",views:{"":{templateUrl:"views/searchBar.html"},"searchResults@searchBar":{templateUrl:"views/searchBar/searchResults.html",controller:"searchResultsController"}}}).state("bookings",{url:"/bookings",views:{"":{templateUrl:"views/bookings.html"},"searchResults@bookings":{templateUrl:"views/searchBar/searchResults.html",controller:"searchResultsController",authenticate:!0}},authenticate:!0}).state("favorites",{url:"/favorites",templateUrl:"views/favorites.html",controller:"favoritesController",authenticate:!0}).state("checkout",{url:"/checkout","abstract":!0,views:{"":{templateUrl:"views/checkout.html"},"checkoutbox@checkout":{templateUrl:"views/checkout/checkoutbox.html"}}}).state("checkout.room",{url:"/room/:roomID",templateUrl:"views/checkout/room.html"}).state("checkout.menu",{url:"/menu",templateUrl:"views/checkout/menu.html"}).state("checkout.payment",{url:"/payments",templateUrl:"views/checkout/payments.html"}).state("checkout.confirmation",{url:"/confirmation",templateUrl:"views/checkout/confirmation.html"})}).run(function($rootScope,$location,Auth){$rootScope.$on("$stateChangeStart",function(event,toState){Auth.isLoggedInAsync(function(loggedIn){toState.authenticate&&!loggedIn&&($rootScope.returnToState=toState.url,$location.path("/"))})})}),angular.module("privateTableApp").controller("bookingsController",["$scope","Bookings",function($scope,Bookings){$scope.Bookings=Bookings,$scope.init=function(){Bookings.getAllBookings()},$scope.init()}]),angular.module("privateTableApp").controller("checkoutController",["$scope","$location","SearchBar","SearchResults","CheckoutOptions","$http","roomData","$stateParams","Auth",function($scope,$location,SearchBar,SearchResults,CheckoutOptions,$http,roomData,$stateParams,Auth){$scope.params=SearchBar,$scope.room,$scope.allBookedTimes,$scope.eventConfirmed=!1,$scope.menuConfirmed=!0,$scope.menuLabel=!0,$scope.showSummary=!0,$scope.available=!1,$scope.menuFinal=!0,$scope.checkoutMenu=roomData,$scope.Auth=Auth,$scope.roomData=roomData,$scope.toMenu=function(){$scope.eventConfirmed=!0,$scope.menuLabel=!1,$scope.menuConfirmed=!1,$("#roomtab").removeClass("active"),$("#menutab").addClass("active"),roomData.reroute("/checkout/menu")},$scope.toRoom=function(){$("#roomtab").addClass("active"),$("#menutab").removeClass("active"),roomData.reroute("/checkout/room/"+$scope.room.id)},$scope.toPay=function(){$(".active").removeClass("active"),$location.path("/checkout/payments"),$scope.menuName=!0,$scope.menuFinal=!1,$scope.menuConfirmed=!0,$scope.showSummary=!1},$scope.dateInit=function(){SearchBar.searchFormInit(),"number"==typeof parseInt($stateParams.roomID)&&roomData.viewRoom($stateParams.roomID,"api/room/",function(){$scope.room=roomData.getRoom(),$scope.allBookedTimes=roomData.getAllBookedTimes()},roomData.reroute("/checkout/room/",$stateParams.roomID)),$scope.room=roomData.getRoom(),$scope.allBookedTimes=roomData.getAllBookedTimes()},$scope.dateSearch=function(){var startTimeStamp="",endTimeStamp="";startTimeStamp=SearchResults.createDate($scope.params.searchParams.date,startTimeStamp),endTimeStamp=SearchResults.createDate($scope.params.searchParams.date,endTimeStamp),startTimeStamp+=" 00:00:00",endTimeStamp+=" 23:59:59",roomData.findAvailableTimes($scope.room.id,"api/dates",startTimeStamp,endTimeStamp,function(){$scope.allBookedTimes=roomData.getAllBookedTimes(),$scope.params.searchParams.endTime&&$scope.params.searchParams.startTime&&$scope.checkTime($scope.params.searchParams.startTime,$scope.params.searchParams.endTime)})},$scope.checkTime=function(start,end){if(start&&end){var convertedStartTime=SearchResults.timeConverter(start),convertedEndTime=SearchResults.timeConverter(end),available=!1;$scope.allBookedTimes.forEach(function(times){var startTime=SearchResults.dbTimeConverter(times.start),endTime=SearchResults.dbTimeConverter(times.end);(convertedStartTime>=startTime&&endTime>=convertedStartTime||convertedEndTime>=startTime&&endTime>=convertedEndTime)&&(available=!0)}),$scope.available=available}},$scope.setMinEndTime=function(){var minEndTime=SearchBar.endTimeAdjuster($scope.params.searchParams.startTime);$("#eventend").datetimepicker({datepicker:!1,format:"g:i A",formatTime:"g:i A",step:30,minTime:minEndTime})},$scope.dateInit(),$scope.Auth.checkLoggedIn()}]),angular.module("privateTableApp").controller("favoritesController",["$scope","Favorites","roomData","Auth","$cookies",function($scope,Favorites,roomData,Auth,$cookies){$scope.Favorites=Favorites,$scope.roomData=roomData,$scope.Auth=Auth,$scope.viewRoom=function(room){roomData.viewRoom(room.roomID,"api/room/",null,roomData.reroute("/checkout/room/",room.roomID))},$scope.init=function(){Favorites.getFavorites(),Auth.checkLoggedIn()},$scope.init()}]),angular.module("privateTableApp").controller("landingController",["$scope","$location","SearchBar","SearchResults","$state",function($scope,$location,SearchBar,SearchResults,$state){$scope.params={},$scope.submitSearch=function(){SearchBar.setSearchParams($scope.params,SearchResults.reroute,"/searchbar")},$scope.init=function(){SearchBar.searchFormInit()},$scope.setMinEndTime=function(){var minEndTime=SearchBar.endTimeAdjuster($scope.params.startTime);console.log("THIS IS MINEND",minEndTime),$("#endtimepick").datetimepicker({datepicker:!1,format:"g:i A",formatTime:"g:i A",step:30,minTime:minEndTime}),$("#starttimepick").datetimepicker({datepicker:!1,format:"g:i A",formatTime:"g:i A",step:30,minTime:"12:00 AM"})},$scope.init()}]),angular.module("privateTableApp").controller("menuController",["$scope","SearchBar","SearchResults","roomData",function($scope,SearchBar,SearchResults,roomData){$scope.firstMenu=!0,$scope.lastMenu=!1,$scope.menus=roomData.menus,$scope.menuNumber=0,$scope.menuTitle=$scope.menus[$scope.menuNumber].name,$scope.checkoutMenu=roomData,$scope.prevMenu=function(){$scope.menuNumber--,roomData.viewCourses($scope.menus[$scope.menuNumber].id,function(){$scope.currentMenu=roomData.getCurrentMenu(),$scope.menuTitle=$scope.menus[$scope.menuNumber].name,$scope.lastMenu=!1,0===$scope.menuNumber&&($scope.firstMenu=!0)})},$scope.nextMenu=function(){$scope.menuNumber++,roomData.viewCourses($scope.menus[$scope.menuNumber].id,function(){$scope.currentMenu=roomData.getCurrentMenu(),$scope.menuTitle=$scope.menus[$scope.menuNumber].name,$scope.firstMenu=!1,$scope.menuNumber===$scope.menus.length-1&&($scope.lastMenu=!0)})},$scope.chooseMenu=function(){var menuOfMenuNumber=$scope.menus[$scope.menuNumber];roomData.chooseMenu(menuOfMenuNumber)},$scope.init=function(){$scope.currentMenu=roomData.getCurrentMenu()},$scope.init()}]),angular.module("privateTableApp").controller("paymentsController",["$scope","$location","$state","$http","SearchBar","roomData","SearchResults",function($scope,$location,$state,$http,SearchBar,roomData,SearchResults){$scope.roomData=roomData,$scope.SearchBar=SearchBar,$scope.SearchResults=SearchResults,$scope.stripeCallback=function(code,result){result.email=$scope.email;var date=SearchBar.searchParams.date,startTimeConverted=SearchResults.timeConverter(SearchBar.searchParams.startTime),endTimeConverted=SearchResults.timeConverter(SearchBar.searchParams.endTime),startTime=SearchResults.createDate(date,"")+" "+startTimeConverted+"+00",endTime=SearchResults.createDate(date,"")+" "+endTimeConverted+"+00",price=SearchBar.searchParams.guests*roomData.checkoutMenu.price,roomID=roomData.currentRoom.id,menuID=roomData.checkoutMenu.id,guests=SearchBar.searchParams.guests,eventType=SearchBar.searchParams.eventType,data={startTime:startTime,endTime:endTime,price:price,roomID:roomID,menuID:menuID,guests:guests,eventType:eventType,result:result};if(console.log(data),!result.error){var url="api/payments";return $http({method:"POST",url:url,data:data}).then(function(response){$state.go("checkout.confirmation")})}window.alert("Your payment did not go through... Try again!")}}]),angular.module("privateTableApp").controller("roomController",["$scope","SearchBar","SearchResults","roomData","$stateParams","$state",function($scope,SearchBar,SearchResults,roomData,$stateParams,$state){$scope.room=roomData.currentRoom,$scope.amenityMore=!0,$scope.feeMore=!0,$scope.roomID=$stateParams,$scope.SearchBar=SearchBar,$scope.searchParams=SearchBar.getSearchParams(),$scope.feeLimit=4,$scope.feeMoreClick=function(){this.liftLimit(this.feeLimit,this.fees,"feeMore")},$scope.toBookings=function(){$state.go("bookings")},$scope.amenityLimit=4,$scope.amenityMoreClick=function(){this.liftLimit(this.amenityLimit,this.amenities,"amenityMore")},$scope.liftLimit=function(limit,list,more){$scope[more]=!1},$scope.init=function(){SearchBar.searchFormInit(),"number"==typeof parseInt($stateParams.roomID)&&roomData.viewRoom($stateParams.roomID,"api/room/",function(){$scope.room=roomData.getRoom()},roomData.reroute("/checkout/room/",$stateParams.roomID)),$scope.room=roomData.getRoom(),$scope.searchParams&&$scope.searchParams.eventType?roomData.viewMenus($stateParams.roomID,$scope.searchParams.eventType):roomData.viewMenus($stateParams.roomID)},$scope.init()}]),angular.module("privateTableApp").controller("searchBarController",["$scope","$location","SearchBar","SearchResults","$stateParams",function($scope,$location,SearchBar,SearchResults,$stateParams){$scope.params,$scope.newSearch=function(){SearchBar.setSearchParams(this.params)},$scope.init=function(){SearchBar.searchFormInit(),$stateParams&&SearchResults.getResults($stateParams,"api/searchresults"),$scope.params=SearchBar.getSearchParams(),SearchResults.showAll()},$scope.setMinEndTime=function(){var minEndTime=SearchBar.endTimeAdjuster($scope.params.startTime);console.log("THIS IS MINEND",minEndTime),$("#endtimepicker").datetimepicker({datepicker:!1,format:"g:i A",formatTime:"g:i A",step:30,minTime:minEndTime}),$("#starttimepicker").datetimepicker({datepicker:!1,format:"g:i A",formatTime:"g:i A",step:30,minTime:"12:00 AM"})},$scope.init()}]),angular.module("privateTableApp").controller("searchResultsController",["$scope","$http","$location","SearchResults","roomData","$cookies","Auth","Favorites","$state",function($scope,$http,$location,SearchResults,roomData,$cookies,Auth,Favorites,$state){$scope.roomResults=SearchResults.searchResults,$scope.Auth=Auth,$scope.Favorites=Favorites,$scope.bookingType=function(room){return SearchResults.bookingsSelection(room)?!0:!1},$scope.viewRoom=function(room){roomData.viewRoom(room.roomID,"api/room/",null,roomData.reroute("/checkout/room/",room.roomID))},$scope.addFavorite=function(room){Favorites.addFavorite(room.roomID)},$scope.removeFavorite=function(room){Favorites.removeFavorite(room.roomID)},$scope.init=function(){Auth.checkLoggedIn(),$scope.Auth.loggedIn&&$scope.Favorites.getFavorites()},$scope.init()}]),angular.module("privateTableApp").controller("navController",["$scope","$location","SearchBar","Auth","$state","SearchResults",function($scope,$location,SearchBar,Auth,$state,SearchResults){$scope.currentUser,$scope.Auth=Auth,$scope.SearchBar=SearchBar,$scope.$state=$state,$scope.init=function(){$scope.SearchResults=Auth.getUser()},$scope.backToSearch=function(){console.log(SearchBar.searchParams),$location.path("/searchBar").search(SearchBar.searchParams)},$scope.loginCredentials={},$scope.errors={},$scope.loginShown=!1,$scope.toggleLogin=function(){$scope.loginShown=!$scope.loginShown},$scope.login=function(form){form&&Auth.login({username:$scope.loginCredentials.username,password:$scope.loginCredentials.password}).then(function(){$scope.currentUser=Auth.getUser(),$scope.toggleLogin(),$scope.Auth.loggedIn=!0})["catch"](function(err){$scope.errors.other=err.message})},$scope.signupCredentials={},$scope.errors={},$scope.signUpShown=!1,$scope.toggleSignUp=function(){$scope.signUpShown=!$scope.signUpShown},$scope.signup=function(form){form?Auth.createUser({username:$scope.signupCredentials.username,email:$scope.signupCredentials.email,password:$scope.signupCredentials.password}).then(function(){$scope.currentUser=Auth.getUser(),$scope.toggleSignUp(),$scope.Auth.loggedIn=!0})["catch"](function(err){err=err.data,$scope.errors={}}):console.log("Form is not valid")},$scope.logout=function(){console.log("logout called"),Auth.logout(),$scope.currentUser=Auth.getUser(),console.log($scope.currentUser),$location.path("/")},$scope.init()}]),angular.module("privateTableApp").directive("googleplace",function(){return{require:"ngModel",link:function(scope,element,attrs,model){var options={types:[],componentRestrictions:{}};scope.gPlace=new google.maps.places.Autocomplete(element[0],options),google.maps.event.addListener(scope.gPlace,"place_changed",function(){scope.$apply(function(){model.$setViewValue(element.val())})})}}}),angular.module("authFactory",[]).factory("Auth",["$http","$resource","$cookies","$q",function($http,$resource,$cookies,$q){var currentUser={},loggedIn=!1;$cookies.get("PrivateTableToken")&&(currentUser=$resource("api/users/me").get());var login=function(credentials){return $resource("auth/local/").save(credentials,function(data){$cookies.put("PrivateTableToken",data.token),AuthFactory.currentUser=$resource("api/users/me").get()},function(err){console.log(err),console.log("we need to figure out error handling here")}.bind(this)).$promise},createUser=function(credentials){var User=$resource("api/users/");return User.save(credentials,function(data){$cookies.put("PrivateTableToken",data.token),AuthFactory.currentUser=$resource("api/users/me").get()},function(err){console.log(err),console.log("we need to figure out error handling here")}.bind(this)).$promise},getUser=function(){return AuthFactory.currentUser},logout=function(){$cookies.remove("PrivateTableToken"),AuthFactory.loggedIn=!1,AuthFactory.currentUser={}},isLoggedInAsync=function(callback){AuthFactory.currentUser.hasOwnProperty("$promise")?AuthFactory.currentUser.$promise.then(function(){callback(!0)})["catch"](function(){callback(!1)}):callback(!1)},checkLoggedIn=function(){$cookies.get("PrivateTableToken")&&(AuthFactory.loggedIn=!0)},AuthFactory={login:login,logout:logout,createUser:createUser,currentUser:currentUser,getUser:getUser,isLoggedInAsync:isLoggedInAsync,loggedIn:loggedIn,checkLoggedIn:checkLoggedIn};return AuthFactory}]),angular.module("authInterceptorFactory",[]).factory("authInterceptor",["$rootScope","$cookies","$q","$location",function($rootScope,$cookies,$q,$location){var request=function(config){return config.headers=config.headers||{},$cookies.get("PrivateTableToken")&&(config.headers.Authorization="Bearer "+$cookies.get("PrivateTableToken")),config},responseError=function(response){return 401===response.status?($location.path("/login"),$cookies.remove("PrivateTableToken"),$q.reject(response)):$q.reject(response)};return{request:request,responseError:responseError}}]),angular.module("bookingsFactory",[]).factory("Bookings",["$http",function($http){var currentBooking,bookings=[],getAllBookings=function(){var url="/api/users/bookings";$http.get(url).success(function(data,status,headers,config){console.log(data),bookings.splice(0,bookings.length),data.forEach(function(val){bookings.push(val)})}).error(function(data,status,headers,config){console.log(data),console.log("There was an error")})},BookingsFactory={bookings:bookings,getAllBookings:getAllBookings,currentBooking:currentBooking};return BookingsFactory}]),angular.module("checkoutFactory",[]).factory("CheckoutOptions",["$location",function($location){var menuParams,eventParams={},setEventParams=function(params,callback){for(var key in params)eventParams[key]=params[key]},getEventParams=function(){return eventParams},setMenuParams=function(menu){menuParams=menu};return{eventParams:eventParams,getEventParams:getEventParams,setEventParams:setEventParams,setMenuParams:setMenuParams}}]),angular.module("favoriteFactory",[]).factory("Favorites",["$location","$http","SearchResults",function($location,$http,SearchResults){var favorites=[],getFavorites=function(){var url="/api/users/favorites";$http.get(url).success(function(data,status,headers,config){favorites.splice(0,favorites.length),data.forEach(function(val){favorites.push(val)})}).error(function(data,status,headers,config){console.log(data),console.log("There was an error")})},isFavorite=function(room){var result=!1;return favorites.forEach(function(roomInArray){roomInArray.roomID===room.roomID&&(result=!0)}),result},addFavorite=function(room){var url="/api/users/favorites/addfavorites";console.log(room),$http.post(url,{roomID:room}).success(function(data,status,headers,config){FavoritesFactory.getFavorites()}).error(function(data,status,headers,config){console.log(data),console.log("There was an error")})},removeFavorite=function(room){var url="/api/users/favorites/deletefavorites";$http.post(url,{roomID:room}).success(function(data,status,headers,config){FavoritesFactory.getFavorites()}).error(function(data,status,headers,config){console.log(data),console.log("There was an error")})},FavoritesFactory={favorites:favorites,removeFavorite:removeFavorite,addFavorite:addFavorite,isFavorite:isFavorite,getFavorites:getFavorites};return FavoritesFactory}]),angular.module("roomFactory",[]).factory("roomData",["SearchResults","$location","$http",function(SearchResults,$location,$http){var currentRoom,roomID,currentMenu,allBookedTimes=[],menus=[],checkoutMenu={};checkoutMenu.price=0;var viewRoom=function(room,url,callback,reroute){var toUrl=url+room;return $http({method:"GET",url:toUrl}).then(function(response){roomID=response.data.id,roomFactory.currentRoom=response.data,roomFactory.currentRoom.menuPrices=roomFactory.currentRoom.menuPrices.sort(function(a,b){return a-b}),callback&&callback(),reroute&&reroute()})},findAvailableTimes=function(roomID,url,startTime,endTime,callback){var toUrl=url;return $http({method:"GET",url:toUrl,params:{roomID:roomID,startTime:startTime,endTime:endTime}}).then(function(response){roomFactory.allBookedTimes.splice(0,roomFactory.allBookedTimes.length),response.data.allTimeBlocks.forEach(function(val){roomFactory.allBookedTimes.push(val)}),callback&&callback()})},reroute=function(url,roomID){roomID?($location.url($location.path()),$location.path(url+roomID)):$location.path(url)},getRoom=function(){return roomFactory.currentRoom},getAllBookedTimes=function(){return roomFactory.allBookedTimes},getCurrentMenu=function(){return roomFactory.currentMenu},chooseMenu=function(menu){roomFactory.checkoutMenu=menu},viewMenus=function(room,eventType,callback){var url="api/menu/eventType";return $http({method:"GET",url:url,params:{roomID:room,eventType:eventType}}).then(function(response){roomFactory.menus.splice(0,roomFactory.menus.length),response.data.forEach(function(menu){roomFactory.menus.push(menu)}),roomFactory.viewCourses(roomFactory.menus[0].id),callback&&callback()})},viewCourses=function(menuID,callback){var url="api/menu/menuID?";return $http({method:"GET",url:url,params:{menuID:menuID}}).then(function(response){roomFactory.currentMenu=response.data,callback&&callback()})},roomFactory={menus:menus,viewCourses:viewCourses,viewMenus:viewMenus,currentRoom:currentRoom,viewRoom:viewRoom,getRoom:getRoom,allBookedTimes:allBookedTimes,reroute:reroute,getAllBookedTimes:getAllBookedTimes,getCurrentMenu:getCurrentMenu,chooseMenu:chooseMenu,currentMenu:currentMenu,findAvailableTimes:findAvailableTimes,checkoutMenu:checkoutMenu};return roomFactory}]),angular.module("searchBarFactory",[]).factory("SearchBar",["SearchResults","$location","CheckoutOptions","$state",function(SearchResults,$location,CheckoutOptions,$state){var searchParams,setSearchParams=function(params,callback,dest){searchBarFactory.searchParams=params,CheckoutOptions.setEventParams(searchBarFactory.searchParams),callback?SearchResults.getSearchResults(searchBarFactory.searchParams,callback,dest):SearchResults.getSearchResults(searchBarFactory.searchParams)},getSearchParams=function(){return searchBarFactory.searchParams},searchFormInit=function(){$(".timepicker").datetimepicker({datepicker:!1,format:"g:i A",formatTime:"g:i A",step:30}),$("#datepicker").datetimepicker({timepicker:!1,format:"m/d/Y",closeOnDateSelect:!0,minDate:0})},endTimeAdjuster=function(time,hours){hours=hours?hours:1;var amPmSwitch=function(minAmPm){minAmPm.split(" "),minAmPm[1].indexOf("AM")>-1?minAmPm[1]="PM":minAmPm[1]="AM",minAmPm.join(" ")},hhMmA=time.split(":");return hhMmA[0]=parseInt(hhMmA[0])+1,hhMmA[0]>12&&(hhMmA[0]-=11,hhMmA[1]=amPmSwitch(hhMmA[1])),12===hhMmA[0]&&(hhMmA[1]=amPmSwitch(hhMmA[1])),hhMmA.join(":")},searchBarFactory={endTimeAdjuster:endTimeAdjuster,searchParams:searchParams,searchFormInit:searchFormInit,getSearchParams:getSearchParams,setSearchParams:setSearchParams};return searchBarFactory}]),angular.module("searchResultsFactory",[]).factory("SearchResults",["$location","$http",function($location,$http){var onlyBookings,reroute=function(params,dest){console.log(params),$location.path(dest).search(params)},searchResults=[],getResults=function(params,url,callback,dest){return $http({method:"GET",url:url,params:params}).then(function(response){searchResults.splice(0,searchResults.length),response.data.forEach(function(val){searchResults.push(val)}),callback&&callback(params,dest)})},getFavoriteResults=function(params){return getResults(params,"api/favoriteResults",reroute,"/favorites")},timeConverter=function(timeString){var time=timeString.split(" "),timeH=time[0].split(":"),timeM=timeH[1],timeH=timeH[0],ampm=time[1];return ampm.indexOf("PM")>-1?(timeH=Number(timeH),timeH+=12,24===timeH&&(timeH=12)):timeH.indexOf("12")>-1?timeH="00":Number(timeH)<10&&(timeH="0"+timeH),timeH+":"+timeM+":00"},createDate=function(date,dateFormatted){return date=date.split("/"),dateFormatted+=date[2]+"-"+date[0]+"-"+date[1]},getSearchResults=function(params,callback,dest){var data={},startTimeStamp="",endTimeStamp="";if(params.date&&(startTimeStamp=createDate(params.date,startTimeStamp),endTimeStamp=createDate(params.date,endTimeStamp)),params.startTime){var startTime=timeConverter(params.startTime);startTimeStamp+=" "+startTime}if(params.endTime){var endTime=timeConverter(params.endTime);endTimeStamp+=" "+endTime}startTimeStamp&&(data.startTimeStamp=startTimeStamp),endTimeStamp&&(data.endTimeStamp=endTimeStamp),params.guests&&(data.guests=params.guests),params.budget&&(data.budget=params.budget),params.eventType&&(data.eventType=params.eventType);var geocoder=new google.maps.Geocoder;geocoder.geocode({address:params.location},function(results,status){if(status==google.maps.GeocoderStatus.OK){data.lng=results[0].geometry.location.F,data.lat=results[0].geometry.location.A;for(var addressTypes=results[0].address_components,i=0;i<addressTypes.length;i++)"locality"===addressTypes[i].types[0]&&(data.city=addressTypes[i].long_name),"administrative_area_level_1"===addressTypes[i].types[0]&&(data.state=addressTypes[i].long_name),"country"===addressTypes[i].types[0]&&(data.country=addressTypes[i].long_name);return getResults(data,"api/searchresults",callback,dest)}console.log("No location entered")})},bookingsSelection=function(room){return onlyBookings&&room.eventType?room.eventType===onlyBookings?!0:!1:!0},showAll=function(){onlyBookings=void 0},showPurchased=function(){onlyBookings="purchased"},showPlanning=function(){onlyBookings="planning"},dbTimeConverter=function(time){return time.split("T")[1].split(".")[0]};return{getFavoriteResults:getFavoriteResults,searchResults:searchResults,getSearchResults:getSearchResults,getResults:getResults,reroute:reroute,timeConverter:timeConverter,bookingsSelection:bookingsSelection,showPlanning:showPlanning,showPurchased:showPurchased,showAll:showAll,createDate:createDate,dbTimeConverter:dbTimeConverter}}]);